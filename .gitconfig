[user]
	name = b1f6c1c4
	email = b1f6c1c4@gmail.com
[sendpack]
	sideband = false
[core]
	excludesfile = ~/.gitignore
	editor = vim
[color]
	ui = auto
[http]
	postBuffer = 524288000
	# proxy = http://localhost:1081
[https]
	# proxy = http://localhost:1081
[alias]
	co = checkout
	st = status -sb
	branches = branch -av
	remotes = remote -v
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(magenta)%d %Cgreen(%aI)%Creset %s %C(bold blue)<%an>%Creset' --abbrev-commit
	la = log --color --graph --pretty=format:'%Cred%h%Creset -%C(magenta)%d %Cgreen(%aI)%Creset %s %C(bold blue)<%an>%Creset' --abbrev-commit --all
	ls = log --color --graph --pretty=format:'%Cred%h%Creset -%C(magenta)%d %Cgreen(%aI)%Creset %s %C(bold blue)<%an>%Creset' --abbrev-commit --decorate --numstat
	lf = log -p
	fe = fetch
	ch = cherry -v
	mf = merge --ff-only
	mnf = merge --no-ff
	mnfnc = merge --no-ff --no-commit
	orphan-worktree = "!git worktree add --no-checkout --detach ../${1} && git symbolic-ref worktrees/${1}/HEAD refs/heads/${1} && git --work-tree=../${1} reset -q && echo "
	dc = diff --cached
	pf = pull --ff-only
	fp = fetch -p
	fpa = fetch --prune --all
	clones = clone --depth 1
	br = branch
	cm = commit
	cmna = commit --amend -C HEAD
	ac = !git add -A && git commit
	acmna = !git add -A && git commit --amend -C HEAD
	pu = push
	pnf = push --force-with-lease
	cp = cherry-pick
	mnfss = merge --no-ff -s subtree
	mnfncss = merge --no-ff --no-commit -s subtree
	pt = push --tags
	mnfssx = !git merge --no-ff -s subtree -X subtree=${1}
	fuck = !git add -A && git commit --amend -C HEAD && git push --force-with-lease
	s = diff-files --name-status
	t = diff-index --name-status HEAD
	ass = update-index --assume-unchanged --
	unass = update-index --no-assume-unchanged --
	skip = update-index --skip-worktree --
	unskip = update-index --no-skip-worktree --
	r = restore --source
	rs = restore --source HEAD --staged
	rw = restore --worktree
	rsw = restore --source HEAD --staged --worktree
	sw = switch
	de = switch --detach
	its = !git branch -f ${1} HEAD && git switch ${1}
	sh = "!bash -c 'git diff-tree --color=always -p \"$1^1\" \"$1\" | less' ''"
	ff = "!bash -c 'git merge-base --is-ancestor \"$1\" \"$2\" && git branch -f \"$1\" \"$2\" && echo \"$(git rev-parse \"$1@{1}\")\" \"->\" \"$(git rev-parse $2)\" || (echo FAIL && false)' ''"
	greps = "!bash -c 'git --no-pager grep \"$@\" -- :/; git submodule foreach --recursive \"$(printf \"%s || true\" \"$(printf \"%q \" git --no-pager greps \"$@\")\" )\"' ''"
	find = "!bash -c 'git ls-files -- :/ | grep \"$1\"' ''"
	finds = "!bash -c 'git ls-files -- :/ | grep \"$1\"; git submodule foreach --recursive \"git ls-files\" | grep -e \"1\" -e Entering' ''"
	onto = "!bash -c 'git update-ref ONTO_TMP HEAD && git rebase -i $1 $2 --onto ONTO_TMP && git branch -f $1 ONTO_TMP && git switch $1' ''"
[credential]
	helper = cache
[diff]
	wsErrorHighlight = all
[uploadpack]
	allowFilter = true
[protocol]
	version = 2
[rebase]
	autosquash = true
